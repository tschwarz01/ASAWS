{
	"name": "03-Ingest-SQL",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "03c8f84b-c99e-427a-bba5-2535342e12f6"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"d9a38db7-a184-4f6a-9850-fcfdb55dbb03": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "1",
										"1": "sysrscols",
										"2": "rsid",
										"3": "clst",
										"4": "1",
										"5": "3",
										"6": "1",
										"7": "2021-07-23 13:46:58.21"
									},
									{
										"0": "2",
										"1": "sysrowsets",
										"2": "rsid",
										"3": "clst",
										"4": "1",
										"5": "5",
										"6": "1",
										"7": "2021-07-23 13:46:57.693"
									},
									{
										"0": "3",
										"1": "sysclones",
										"2": "rsid",
										"3": "clst",
										"4": "1",
										"5": "6",
										"6": "1",
										"7": "2021-07-23 13:46:57.567"
									},
									{
										"0": "4",
										"1": "sysallocunits",
										"2": "rsid",
										"3": "clst",
										"4": "1",
										"5": "7",
										"6": "1",
										"7": "2021-07-23 13:46:57.353"
									},
									{
										"0": "5",
										"1": "sysfiles1",
										"2": "rsid",
										"3": "clst",
										"4": "1",
										"5": "8",
										"6": "1",
										"7": "2003-04-08 09:13:38.093"
									},
									{
										"0": "6",
										"1": "sysseobjvalues",
										"2": "rsid",
										"3": "clst",
										"4": "1",
										"5": "9",
										"6": "1",
										"7": "2021-07-23 13:46:57.733"
									},
									{
										"0": "7",
										"1": "syspriorities",
										"2": "rsid",
										"3": "clst",
										"4": "1",
										"5": "17",
										"6": "1",
										"7": "2021-07-23 13:46:57.45"
									},
									{
										"0": "8",
										"1": "sysdbfrag",
										"2": "rsid",
										"3": "clst",
										"4": "1",
										"5": "18",
										"6": "1",
										"7": "2021-07-23 13:46:57.68"
									},
									{
										"0": "9",
										"1": "sysfgfrag",
										"2": "rsid",
										"3": "clst",
										"4": "1",
										"5": "19",
										"6": "1",
										"7": "2021-07-23 13:46:57.297"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "Id",
										"type": "int"
									},
									{
										"key": "1",
										"name": "Data1",
										"type": "string"
									},
									{
										"key": "2",
										"name": "Data2",
										"type": "string"
									},
									{
										"key": "3",
										"name": "Data3",
										"type": "string"
									},
									{
										"key": "4",
										"name": "at_1",
										"type": "int"
									},
									{
										"key": "5",
										"name": "at_2",
										"type": "int"
									},
									{
										"key": "6",
										"name": "at_3",
										"type": "int"
									},
									{
										"key": "7",
										"name": "Data2_dt",
										"type": "timestamp"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"1"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"```\r\n",
					"Create a SQL Database and provide the credentials and connect to the database\r\n",
					"```\r\n",
					""
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					}
				},
				"source": [
					"%%spark\r\n",
					"val jdbcUsername = \"Useraccount\"\r\n",
					"val jdbcPassword = \"*****\"\r\n",
					"val jdbcHostname = \"sqldb.database.windows.net\"\r\n",
					"val jdbcPort = 1433\r\n",
					"val jdbcDatabase = \"sample\"\r\n",
					"\r\n",
					"// Create the JDBC URL without passing in the user and password parameters.\r\n",
					"val jdbcUrl = s\"jdbc:sqlserver://${jdbcHostname}:${jdbcPort};database=${jdbcDatabase}\"\r\n",
					"\r\n",
					"// Create a Properties() object to hold the parameters.\r\n",
					"import java.util.Properties\r\n",
					"val connectionProperties = new Properties()\r\n",
					"\r\n",
					"connectionProperties.put(\"user\", s\"${jdbcUsername}\")\r\n",
					"connectionProperties.put(\"password\", s\"${jdbcPassword}\")"
				],
				"execution_count": 2
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Load data from SQL to Dataframe"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					},
					"collapsed": false
				},
				"source": [
					"%%spark\r\n",
					"val pushdown_query = \"(SELECT  Id,[Data1],[Data2],[Data3],[at_1],[at_2],[at_3],[Data2_dt] FROM dbo.LargeTbl3 where id < 10) Largetbl\"\r\n",
					"val df = spark.read.jdbc(url=jdbcUrl, table=pushdown_query, properties=connectionProperties)\r\n",
					"display(df)"
				],
				"execution_count": 3
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Create a temp view"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					}
				},
				"source": [
					"%%spark\r\n",
					"\r\n",
					"df.createOrReplaceTempView(\"Largetbl_vw\")\r\n",
					""
				],
				"execution_count": 4
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Load to a delta table"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"DROP TABLE if exists db1.Largetbl;\r\n",
					"CREATE OR REPLACE TABLE db1.Largetbl\r\n",
					"USING DELTA\r\n",
					"LOCATION '/mnt/deltalake/largetbl'\r\n",
					"AS\r\n",
					"Select * from Largetbl_vw"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"Describe detail db1.Largetbl"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"select count(*) from db1.Largetbl"
				],
				"execution_count": 7
			}
		]
	}
}